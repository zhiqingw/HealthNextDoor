{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\wuzhiqing\\\\Desktop\\\\mylibraryapp-frontend-starter (5)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from \"react\"; // TODO - update this to be your url\n\nvar BASE_URL = \"https://mylibraryapp956895.herokuapp.com\";\n\nfunction getAuthors() {\n  var endpoint = BASE_URL + \"/author-management\"; // return fetch call that gets author list\n\n  return fetch(endpoint).then(function (res) {\n    console.log(res);\n    return res.json();\n  });\n}\n\nexport function getAuthor(id) {\n  var endpoint = BASE_URL + \"/author-management/\".concat(id); // TODO\n  // return fetch statement to get an author by the id\n}\nexport function addAuthor(author) {\n  var id = author.id,\n      first_name = author.first_name,\n      last_name = author.last_name;\n\n  if (!id || !first_name || !last_name) {\n    alert(\"must include all fields\");\n    return;\n  }\n\n  var endpoint = BASE_URL + \"/author-management/\"; // TODO\n  // return fetch statement to add an author\n\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id,\n      first_name,\n      last_name\n    })\n  });\n}\nexport function loginCheck(username, password) {\n  if (!username) {\n    alert(\"must include a username\");\n    return;\n  }\n\n  if (!password) {\n    alert(\"must include password\");\n    return;\n  }\n\n  var endpoint = BASE_URL + \"/login\"; // return fetch query to update an author\n\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  }).then(function (res) {\n    if (res.ok) {\n      window.location.href = \"/${id}\";\n    } else {\n      return console.log(\"wrong password or username\");\n    }\n  });\n}\nexport function updateAuthor(author) {\n  var id = author.id,\n      first_name = author.first_name,\n      last_name = author.last_name;\n\n  if (!id) {\n    alert(\"must include an id\");\n    return;\n  }\n\n  if (!first_name || !last_name) {\n    alert(\"must include a first name or last name to update\");\n    return;\n  }\n\n  var endpoint = BASE_URL + \"/author-management/\".concat(id); // return fetch query\n\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id,\n      first_name,\n      last_name\n    })\n  }); //.then(res => location.reload());\n}\nexport function deleteAuthor(id) {\n  var endpoint = BASE_URL + \"/author-management/\".concat(id);\n  return fetch(endpoint, {\n    method: \"DELETE\"\n  }); // return fetch query\n}\nexport function useAuthors() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      authors = _useState4[0],\n      setAuthors = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  useEffect(function () {\n    getAuthors().then(function (authors) {\n      setAuthors(authors);\n      setLoading(false);\n    }).catch(function (e) {\n      console.log(e);\n      setError(e);\n      setLoading(false);\n    });\n  }, []);\n  return {\n    loading,\n    authors,\n    error\n  };\n}","map":{"version":3,"sources":["C:/Users/wuzhiqing/Desktop/mylibraryapp-frontend-starter (5)/src/api.js"],"names":["useState","useEffect","BASE_URL","getAuthors","endpoint","fetch","then","res","console","log","json","getAuthor","id","addAuthor","author","first_name","last_name","alert","method","headers","body","JSON","stringify","loginCheck","username","password","ok","window","location","href","updateAuthor","deleteAuthor","useAuthors","loading","setLoading","authors","setAuthors","error","setError","catch","e"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\n\n// TODO - update this to be your url\nconst BASE_URL = \"https://mylibraryapp956895.herokuapp.com\";\n\nfunction getAuthors() {\n  const endpoint = BASE_URL + `/author-management`;\n// return fetch call that gets author list\n  return fetch(endpoint).then(res => {\n    console.log(res);\n    return res.json();\n  });\n}\n\nexport function getAuthor(id) {\n  const endpoint = BASE_URL + `/author-management/${id}`;\n\n  // TODO\n  // return fetch statement to get an author by the id\n}\n\nexport function addAuthor(author) {\n  const { id, first_name, last_name } = author;\n  if (!id || !first_name || !last_name) {\n    alert(\"must include all fields\");\n    return;\n  }\n\n  const endpoint = BASE_URL + `/author-management/`;\n\n  // TODO\n  // return fetch statement to add an author\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id,\n      first_name,\n      last_name\n    })\n  });\n}\n\nexport function loginCheck(username, password) {\n\n  if (!username) {\n    alert(\"must include a username\");\n    return;\n  }\n  if (!password) {\n    alert(\"must include password\");\n    return;\n  }\n\n  const endpoint = BASE_URL + `/login`;\n\n  // return fetch query to update an author\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  }).then(res =>{\n    if(res.ok){\n      window.location.href = \"/${id}\";\n    }\n    else{\n      return console.log(\"wrong password or username\");\n    }\n  });\n\n}\nexport function updateAuthor(author) {\n  const { id, first_name, last_name } = author;\n  if (!id) {\n    alert(\"must include an id\");\n    return;\n  }\n  if (!first_name || !last_name) {\n    alert(\"must include a first name or last name to update\");\n    return;\n  }\n  const endpoint = BASE_URL + `/author-management/${id}`;\n// return fetch query\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id,\n      first_name,\n      last_name\n    })\n  });\n  //.then(res => location.reload());\n}\n\nexport function deleteAuthor(id) {\n  const endpoint = BASE_URL + `/author-management/${id}`;\n  return fetch(endpoint, {\n    method: \"DELETE\",\n  });\n  // return fetch query\n}\n\nexport function useAuthors() {\n  const [loading, setLoading] = useState(true);\n  const [authors, setAuthors] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getAuthors()\n        .then(authors => {\n          setAuthors(authors);\n          setLoading(false);\n        })\n        .catch(e => {\n          console.log(e);\n          setError(e);\n          setLoading(false);\n        });\n  }, []);\n\n  return {\n    loading,\n    authors,\n    error\n  };\n}\n"]},"metadata":{},"sourceType":"module"}