{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\wuzhiqing\\\\Desktop\\\\mylibraryapp-frontend-starter (5)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\wuzhiqing\\\\Desktop\\\\mylibraryapp-frontend-starter (5)\\\\src\\\\pages\\\\User.js\";\nimport React, { useState } from \"react\";\nimport { updateUser, useUser } from \"../api\";\nimport Button from \"../components/Button\";\nimport Header from \"../components/Header\";\nexport default function Users() {\n  /*const { loading, users, error } = useUser();\r\n  if (loading) {\r\n      return <p>Loading...</p>;\r\n  }\r\n  if (error) {\r\n      return <p>Something went wrong: {error.message}</p>;\r\n  }\r\n    // use this to make sure you are getting the right data\r\n  console.log(users);*/\n  // Display a list of the users\n  var username;\n  username = window.location.pathname;\n  console.log(\"aaaa\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"Welcome\"));\n}\n\nfunction User(user) {\n  var username = user.username,\n      password = user.password;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showUpdate = _useState2[0],\n      setShowUpdate = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user user-\".concat(username),\n    key: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"(\", username, \")\", /*#__PURE__*/React.createElement(Button, {\n    className: \"btn\",\n    onClick: function onClick() {\n      return setShowUpdate(!showUpdate);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, showUpdate ? \"-\" : \"+\")), /*#__PURE__*/React.createElement(UserExtended, Object.assign({}, user, {\n    showUpdate: showUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  })));\n}\n\nfunction UserExtended(props) {\n  var username = props.username,\n      password = props.password,\n      showUpdate = props.showUpdate;\n\n  var _useState3 = useState(password),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password_input = _useState4[0],\n      setPassword = _useState4[1];\n\n  function onSubmit() {\n    // call upate author function\n    updateUser({\n      username: username,\n      password: password_input\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-expand \".concat(showUpdate ? \"show\" : \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"password\",\n    value: password_input,\n    onChange: function onChange(event) {\n      setPassword(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-warning\",\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Update\")));\n}","map":{"version":3,"sources":["C:/Users/wuzhiqing/Desktop/mylibraryapp-frontend-starter (5)/src/pages/User.js"],"names":["React","useState","updateUser","useUser","Button","Header","Users","username","window","location","pathname","console","log","User","user","password","showUpdate","setShowUpdate","UserExtended","props","password_input","setPassword","onSubmit","event","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,UAAR,EAAoBC,OAApB,QAAkC,QAAlC;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC5B;;;;;;;;;AAUA;AACA,MAAIC,QAAJ;AACAA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAA3B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ;AAKH;;AAED,SAASC,IAAT,CAAcC,IAAd,EAAoB;AAAA,MACTP,QADS,GACaO,IADb,CACTP,QADS;AAAA,MACCQ,QADD,GACaD,IADb,CACCC,QADD;;AAAA,kBAEoBd,QAAQ,CAAC,KAAD,CAF5B;AAAA;AAAA,MAETe,UAFS;AAAA,MAEGC,aAFH;;AAIhB,sBACI;AAAK,IAAA,SAAS,sBAAeV,QAAf,CAAd;AAAyC,IAAA,GAAG,EAAEA,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACMA,QADN,oBAEI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAE,KAAnB;AAA0B,IAAA,OAAO,EAAE;AAAA,aAAMU,aAAa,CAAC,CAACD,UAAF,CAAnB;AAAA,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,UAAU,GAAG,GAAH,GAAS,GADxB,CAFJ,CADJ,eAOI,oBAAC,YAAD,oBAAkBF,IAAlB;AAAwB,IAAA,UAAU,EAAEE,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAPJ,CADJ;AAWH;;AAED,SAASE,YAAT,CAAsBC,KAAtB,EAA6B;AAAA,MACjBZ,QADiB,GACiBY,KADjB,CACjBZ,QADiB;AAAA,MACPQ,QADO,GACiBI,KADjB,CACPJ,QADO;AAAA,MACGC,UADH,GACiBG,KADjB,CACGH,UADH;;AAAA,mBAGaf,QAAQ,CAACc,QAAD,CAHrB;AAAA;AAAA,MAGlBK,cAHkB;AAAA,MAGFC,WAHE;;AAMzB,WAASC,QAAT,GAAoB;AAChB;AACApB,IAAAA,UAAU,CAAC;AACPK,MAAAA,QAAQ,EAAEA,QADH;AAEPQ,MAAAA,QAAQ,EAAEK;AAFH,KAAD,CAAV;AAIH;;AAED,sBACI;AAAK,IAAA,SAAS,wBAAiBJ,UAAU,GAAG,MAAH,GAAY,EAAvC,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,UAAxB;AAAmC,IAAA,KAAK,EAAEI,cAA1C;AAA0D,IAAA,QAAQ,EAAI,kBAAAG,KAAK,EAAI;AAACF,MAAAA,WAAW,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AAAgC,KAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAE,aAAnB;AAAkC,IAAA,OAAO,EAAEH,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CADJ,CADJ;AAWH","sourcesContent":["import React, { useState } from \"react\";\r\nimport {updateUser, useUser} from \"../api\";\r\n\r\nimport Button from \"../components/Button\";\r\nimport Header from \"../components/Header\";\r\n\r\nexport default function Users() {\r\n    /*const { loading, users, error } = useUser();\r\n    if (loading) {\r\n        return <p>Loading...</p>;\r\n    }\r\n    if (error) {\r\n        return <p>Something went wrong: {error.message}</p>;\r\n    }\r\n\r\n    // use this to make sure you are getting the right data\r\n    console.log(users);*/\r\n    // Display a list of the users\r\n    let username;\r\n    username = window.location.pathname\r\n    console.log(\"aaaa\");\r\n\r\n    return (\r\n        <div>\r\n            <h1>Welcome</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction User(user) {\r\n    const {username, password} = user;\r\n    const [showUpdate, setShowUpdate] = useState(false);\r\n\r\n    return (\r\n        <div className={`user user-${username}`} key={username}>\r\n            <div className=\"info\">\r\n                ({username})\r\n                <Button className={\"btn\"} onClick={() => setShowUpdate(!showUpdate)}>\r\n                    {showUpdate ? \"-\" : \"+\"}\r\n                </Button>\r\n            </div>\r\n            <UserExtended {...user} showUpdate={showUpdate} />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction UserExtended(props) {\r\n    const { username, password, showUpdate} = props;\r\n\r\n    const [password_input, setPassword] = useState(password);\r\n\r\n\r\n    function onSubmit() {\r\n        // call upate author function\r\n        updateUser({\r\n            username: username,\r\n            password: password_input\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className={`user-expand ${showUpdate ? \"show\" : \"\"}`}>\r\n            <form>\r\n                {/* TODO - add value and onChange properties to inputs */}\r\n                <input type=\"text\" name=\"password\" value={password_input} onChange = {event => {setPassword(event.target.value)}} />\r\n                <Button className={\"btn-warning\"} onClick={onSubmit}>\r\n                    Update\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}