{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\wuzhiqing\\\\Documents\\\\GitHub\\\\info30005_front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from \"react\"; // TODO - update this to be your url\n\nvar BASE_URL = \"https://healthnextdoortest.herokuapp.com\";\n/*login check used to validate the input with data from the database and let the user log in*/\n\nexport function loginCheck(username, password) {\n  if (!username) {\n    alert(\"must include a username\");\n    return;\n  }\n\n  if (!password) {\n    alert(\"must include password\");\n    return;\n  }\n\n  var endpoint = BASE_URL + \"/login\"; // return fetch query to check whether the password is correct\n\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  }).then(function (res) {\n    if (res.ok) {\n      //store current login status\n      window.sessionStorage.setItem(\"username\", username);\n      window.location.assign(\"user-management/\".concat(username));\n    } else {\n      alert(\"wrong password or username\");\n    }\n  });\n}\n/*sign up check used to validate the input and let the user sign up*/\n\nexport function signupCheck(username, password, confirmed_password, identity) {\n  if (username === \"\") {\n    alert(\"please input a username!\");\n  }\n\n  if (password === \"\") {\n    alert(\"please input a password!\");\n  }\n\n  if (confirmed_password === \"\") {\n    alert(\"please confirm your password!\");\n  }\n\n  if (password !== confirmed_password) {\n    alert(\"password and confirmed password does not match\");\n  }\n\n  var endpoint = BASE_URL + \"/signup\";\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      password,\n      identity\n    })\n  }).then(function (res) {\n    if (res.ok) {\n      window.sessionStorage.setItem(\"username\", username);\n\n      if (identity === \"caregiver\") {\n        //redirect to user page after user create an account\n        //window.sessionStorage.setItem(\"username\", username);\n        //window.location.href = `user-management/${username}`;\n        window.location.href = \"AddCaregiver\";\n      } else {\n        window.location.href = \"AddPatient\";\n      }\n    } else {\n      alert(\"This username has already been taken!\");\n      window.location.href = \"SignUp/\";\n    }\n  });\n} //reset the user password\n\nexport function updateUser(user) {\n  var username = user.username,\n      password = user.password;\n\n  if (!password) {\n    alert(\"must include a password\");\n    return;\n  }\n\n  var endpoint = BASE_URL + \"/login/\".concat(username); // return fetch query\n\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n} //return all the user\n\nexport function getUser() {\n  var endpoint = BASE_URL + \"/login\";\n  return fetch(endpoint).then(function (res) {\n    console.log(res);\n    return res.json();\n  });\n}\nexport function useUser() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  useEffect(function () {\n    getUser().then(function (user) {\n      setUser(user);\n      setLoading(false);\n    }).catch(function (e) {\n      console.log(e);\n      setError(e);\n      setLoading(false);\n    });\n  }, []);\n  return {\n    loading,\n    user,\n    error\n  };\n} //get all caregivers\n\nfunction getCaregivers() {\n  var endpoint = BASE_URL + \"/findCaregiver\"; // TODO\n  // return fetch call that gets caregivers list\n\n  return fetch(endpoint).then(function (res) {\n    console.log(res);\n    return res.json();\n  });\n}\n/*addCaregiver used to let user to make a post*/\n\n\nexport function addCaregiver(caregiver) {\n  var first_name = caregiver.first_name,\n      last_name = caregiver.last_name,\n      gender = caregiver.gender,\n      introduction = caregiver.introduction,\n      username = caregiver.username,\n      age = caregiver.age,\n      address = caregiver.address,\n      salary = caregiver.salary,\n      working_experience = caregiver.working_experience,\n      contact_information = caregiver.contact_information;\n\n  if (!gender || !first_name || !last_name || !introduction || !username || !age || !address || !salary || !working_experience || !contact_information) {\n    alert(\"must include all fields\");\n    return;\n  }\n\n  var endpoint = BASE_URL + \"/findCaregiver/\";\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      first_name,\n      last_name,\n      gender,\n      introduction,\n      username,\n      age,\n      address,\n      salary,\n      working_experience,\n      contact_information\n    })\n  }).then(function (res) {\n    if (res.ok) {\n      window.location.href = \"user-management/\".concat(username);\n    } else {\n      alert(\"You already have a post, please update or delete the existed post in user home page!\");\n    }\n  });\n}\n/*updataeCarever used to let user to update post*/\n\nexport function updateCaregiver(caregiver) {\n  var first_name = caregiver.first_name,\n      last_name = caregiver.last_name,\n      gender = caregiver.gender,\n      introduction = caregiver.introduction,\n      username = caregiver.username,\n      age = caregiver.age,\n      address = caregiver.address,\n      salary = caregiver.salary,\n      working_experience = caregiver.working_experience,\n      contact_information = caregiver.contact_information;\n\n  if (!username) {\n    alert(\"must include a username\");\n    return;\n  }\n\n  if (!first_name || !last_name) {\n    alert(\"must include a first name or last name to update\");\n    return;\n  }\n\n  if (!gender) {\n    alert(\"must include gender\");\n    return;\n  }\n\n  if (!introduction) {\n    alert(\"must include an introduction\");\n    return;\n  }\n\n  if (!age) {\n    alert(\"must include an age\");\n    return;\n  }\n\n  if (!address) {\n    alert(\"must include an address\");\n    return;\n  }\n\n  if (!salary) {\n    alert(\"must include a salary\");\n    return;\n  }\n\n  if (!working_experience) {\n    alert(\"must include a working experience\");\n    return;\n  }\n\n  if (!contact_information) {\n    alert(\"must include a contact information\");\n    return;\n  }\n\n  var endpoint = BASE_URL + \"/findCaregiver/\".concat(username);\n  console.log(contact_information.value); // return fetch query to update an author\n\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      first_name,\n      last_name,\n      gender,\n      introduction,\n      username,\n      age,\n      address,\n      salary,\n      working_experience,\n      contact_information\n    })\n  });\n} //use username to delete a post\n\nexport function deleteCaregiver(username) {\n  var endpoint = BASE_URL + \"/findCaregiver/\".concat(username);\n  return fetch(endpoint, {\n    method: \"DELETE\"\n  }).then(function (res) {\n    window.location.href = \"user-management/\".concat(username);\n  });\n}\nexport function useCaregivers() {\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      caregivers = _useState10[0],\n      setCaregivers = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      error = _useState12[0],\n      setError = _useState12[1];\n\n  useEffect(function () {\n    getCaregivers().then(function (caregivers) {\n      setCaregivers(caregivers);\n      setLoading(false);\n    }).catch(function (e) {\n      console.log(e);\n      setError(e);\n      setLoading(false);\n    });\n  }, []);\n  return {\n    loading,\n    caregivers,\n    error\n  };\n} //get all caregivers\n\nfunction getPatients() {\n  var endpoint = BASE_URL + \"/findPatient\"; // TODO\n  // return fetch call that gets caregivers list\n\n  return fetch(endpoint).then(function (res) {\n    console.log(res);\n    return res.json();\n  });\n}\n\nexport function usePatients() {\n  var _useState13 = useState(true),\n      _useState14 = _slicedToArray(_useState13, 2),\n      loading = _useState14[0],\n      setLoading = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      patients = _useState16[0],\n      setPatients = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      error = _useState18[0],\n      setError = _useState18[1];\n\n  useEffect(function () {\n    getPatients().then(function (patients) {\n      setPatients(patients);\n      setLoading(false);\n    }).catch(function (e) {\n      console.log(e);\n      setError(e);\n      setLoading(false);\n    });\n  }, []);\n  return {\n    loading,\n    patients,\n    error\n  };\n}\nexport function acceptReq(user) {\n  var username = user.username,\n      name = user.name,\n      state = user.state;\n  var endpoint = BASE_URL + \"/user/\".concat(username); // return fetch query\n\n  console.log(name);\n  console.log(state);\n  var action = [state, name];\n  console.log(action);\n  console.log(JSON.stringify([state, name]));\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      action\n    })\n  }).then(function (res) {\n    window.location.assign(\"http://localhost:3000/toList/\".concat(window.sessionStorage.getItem(\"username\")));\n  });\n}\nexport function acceptReqPatient(user) {\n  var username = user.username,\n      name = user.name,\n      state = user.state;\n  var endpoint = BASE_URL + \"/user/\".concat(username); // return fetch query\n\n  console.log(name);\n  console.log(state);\n  var action = [state, name];\n  console.log(action);\n  console.log(JSON.stringify([state, name]));\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      action\n    })\n  });\n}\nexport function declineReq(user) {\n  var username = user.username,\n      name = user.name,\n      state = user.state;\n  var endpoint = BASE_URL + \"/user/\".concat(username); // return fetch query\n\n  console.log(name);\n  console.log(state);\n  var action = [state, name];\n  console.log(action);\n  console.log(JSON.stringify([state, name]));\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      action\n    })\n  }).then(function (res) {\n    window.location.assign(\"http://localhost:3000/toList/\".concat(window.sessionStorage.getItem(\"username\")));\n  });\n}\nexport function declineReqPatient(user) {\n  var username = user.username,\n      name = user.name,\n      state = user.state;\n  var endpoint = BASE_URL + \"/user/\".concat(username); // return fetch query\n\n  console.log(name);\n  console.log(state);\n  var action = [state, name];\n  console.log(action);\n  console.log(JSON.stringify([state, name]));\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      action\n    })\n  });\n}\nexport function sendRequest(user) {\n  var username = user.username,\n      name = user.name,\n      state = user.state;\n  var endpoint = BASE_URL + \"/user/\".concat(username); // return fetch query\n  //console.log(\"here!!!!!!!!!!!!\");\n\n  console.log(name);\n  console.log(state);\n  var action = [state, name];\n  console.log(action);\n  console.log(JSON.stringify([state, name]));\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      action\n    })\n  });\n}\nexport function sentRequestPatient(user) {\n  var username = user.username,\n      name = user.name,\n      state = user.state;\n  var endpoint = BASE_URL + \"/user/\".concat(username); // return fetch query\n\n  console.log(name);\n  console.log(state);\n  var action = [state, name];\n  console.log(action);\n  console.log(JSON.stringify([state, name]));\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      action\n    })\n  }).then(function (res) {//window.location.assign(`http://localhost:3000/toList/${window.sessionStorage.getItem(\"username\")}`)\n  });\n}\nexport function addPatient(patient) {\n  var first_name = patient.first_name,\n      last_name = patient.last_name,\n      gender = patient.gender,\n      introduction = patient.introduction,\n      username = patient.username,\n      age = patient.age,\n      address = patient.address,\n      contact_information = patient.contact_information;\n\n  if (!gender || !first_name || !last_name || !introduction || !username || !age || !address || !contact_information) {\n    alert(\"must include all fields\");\n    return;\n  }\n\n  var endpoint = BASE_URL + \"/findPatient/\";\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      first_name,\n      last_name,\n      gender,\n      introduction,\n      username,\n      age,\n      address,\n      contact_information\n    })\n  }).then(function (res) {\n    if (res.ok) {\n      window.location.href = \"user-management/\".concat(username);\n    } else {\n      alert(\"You already have a post, please update or delete the existed post in user home page!\");\n    }\n  });\n}\nexport function updatePatient(patient) {\n  var first_name = patient.first_name,\n      last_name = patient.last_name,\n      gender = patient.gender,\n      introduction = patient.introduction,\n      username = patient.username,\n      age = patient.age,\n      address = patient.address,\n      contact_information = patient.contact_information;\n\n  if (!username) {\n    alert(\"must include a username\");\n    return;\n  }\n\n  if (!first_name || !last_name) {\n    alert(\"must include a first name or last name to update\");\n    return;\n  }\n\n  if (!gender) {\n    alert(\"must include gender\");\n    return;\n  }\n\n  if (!introduction) {\n    alert(\"must include an introduction\");\n    return;\n  }\n\n  if (!age) {\n    alert(\"must include an age\");\n    return;\n  }\n\n  if (!address) {\n    alert(\"must include an address\");\n    return;\n  }\n\n  if (!contact_information) {\n    alert(\"must include a contact information\");\n    return;\n  }\n\n  var endpoint = BASE_URL + \"/findPatient/\".concat(username);\n  console.log(contact_information.value); // return fetch query to update an author\n\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      first_name,\n      last_name,\n      gender,\n      introduction,\n      username,\n      age,\n      address,\n      contact_information\n    })\n  });\n}\nexport function deletePatient(username) {\n  var endpoint = BASE_URL + \"/findPatient/\".concat(username);\n  return fetch(endpoint, {\n    method: \"DELETE\"\n  }).then(function (res) {\n    window.location.href = \"user-management/\".concat(username);\n  });\n}","map":{"version":3,"sources":["C:/Users/wuzhiqing/Documents/GitHub/info30005_front/src/api.js"],"names":["useState","useEffect","BASE_URL","loginCheck","username","password","alert","endpoint","fetch","method","headers","body","JSON","stringify","then","res","ok","window","sessionStorage","setItem","location","assign","signupCheck","confirmed_password","identity","href","updateUser","user","getUser","console","log","json","useUser","loading","setLoading","setUser","error","setError","catch","e","getCaregivers","addCaregiver","caregiver","first_name","last_name","gender","introduction","age","address","salary","working_experience","contact_information","updateCaregiver","value","deleteCaregiver","useCaregivers","caregivers","setCaregivers","getPatients","usePatients","patients","setPatients","acceptReq","name","state","action","getItem","acceptReqPatient","declineReq","declineReqPatient","sendRequest","sentRequestPatient","addPatient","patient","updatePatient","deletePatient"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\n// TODO - update this to be your url\r\nconst BASE_URL = \"https://healthnextdoortest.herokuapp.com\";\r\n\r\n/*login check used to validate the input with data from the database and let the user log in*/\r\nexport function loginCheck(username, password) {\r\n\r\n  if (!username) {\r\n    alert(\"must include a username\");\r\n    return;\r\n  }\r\n  if (!password) {\r\n    alert(\"must include password\");\r\n    return;\r\n  }\r\n\r\n  const endpoint = BASE_URL + `/login`;\r\n  // return fetch query to check whether the password is correct\r\n  return fetch(endpoint, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      password\r\n    })\r\n  }).then(res =>{\r\n    if(res.ok){\r\n      //store current login status\r\n      window.sessionStorage.setItem(\"username\",username);\r\n      window.location.assign(`user-management/${username}`)\r\n    }\r\n    else{\r\n      alert(\"wrong password or username\");\r\n    }\r\n  });\r\n}\r\n\r\n/*sign up check used to validate the input and let the user sign up*/\r\nexport function signupCheck(username, password, confirmed_password, identity) {\r\n\r\n  if (username === \"\") {\r\n    alert(\"please input a username!\");\r\n  }\r\n  if (password === \"\") {\r\n    alert(\"please input a password!\");\r\n  }\r\n  if (confirmed_password === \"\") {\r\n    alert(\"please confirm your password!\");\r\n  }\r\n  if (password !== confirmed_password) {\r\n    alert(\"password and confirmed password does not match\");\r\n  }\r\n  const endpoint = BASE_URL + `/signup`;\r\n  return fetch(endpoint, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      password,\r\n      identity\r\n    })\r\n  }).then(res =>{\r\n    if(res.ok){\r\n      window.sessionStorage.setItem(\"username\", username);\r\n      if (identity===\"caregiver\") {\r\n        //redirect to user page after user create an account\r\n        //window.sessionStorage.setItem(\"username\", username);\r\n        //window.location.href = `user-management/${username}`;\r\n        window.location.href = `AddCaregiver`;\r\n      } else {\r\n        window.location.href =\"AddPatient\";\r\n      }\r\n    }\r\n    else{\r\n      alert(\"This username has already been taken!\");\r\n      window.location.href = `SignUp/`;\r\n    }\r\n  });\r\n\r\n}\r\n//reset the user password\r\nexport function updateUser(user) {\r\n  const { username, password} = user;\r\n  if (!password) {\r\n    alert(\"must include a password\");\r\n    return;\r\n  }\r\n  const endpoint = BASE_URL + `/login/${username}`;\r\n// return fetch query\r\n  return fetch(endpoint, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      password\r\n    })\r\n  });\r\n}\r\n\r\n//return all the user\r\nexport function getUser() {\r\n  const endpoint = BASE_URL + `/login`;\r\n  return fetch(endpoint).then(res => {\r\n    console.log(res);\r\n    return res.json();\r\n  });\r\n}\r\n\r\nexport function useUser() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [user, setUser] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getUser()\r\n        .then(user => {\r\n          setUser(user);\r\n          setLoading(false);\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n          setError(e);\r\n          setLoading(false);\r\n        });\r\n  }, []);\r\n\r\n  return {\r\n    loading,\r\n    user,\r\n    error\r\n  };\r\n}\r\n\r\n//get all caregivers\r\nfunction getCaregivers() {\r\n  const endpoint = BASE_URL + `/findCaregiver`;\r\n\r\n  // TODO\r\n  // return fetch call that gets caregivers list\r\n  return fetch(endpoint).then(res => {\r\n    console.log(res);\r\n    return res.json();\r\n  });\r\n}\r\n/*addCaregiver used to let user to make a post*/\r\nexport function addCaregiver(caregiver) {\r\n  const { first_name, last_name, gender, introduction, username, age, address, salary, working_experience,contact_information } = caregiver;\r\n  if ( !gender|| !first_name || !last_name || !introduction || !username || !age || !address || !salary || !working_experience || !contact_information) {\r\n    alert(\"must include all fields\");\r\n    return;\r\n  }\r\n\r\n  const endpoint = BASE_URL + `/findCaregiver/`;\r\n  return fetch(endpoint, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      first_name,\r\n      last_name,\r\n      gender,\r\n      introduction,\r\n      username,\r\n      age,\r\n      address,\r\n      salary,\r\n      working_experience,\r\n      contact_information,\r\n    })\r\n  }).then(res =>{\r\n    if(res.ok){\r\n      window.location.href = `user-management/${username}`;\r\n    }\r\n    else{\r\n      alert(\"You already have a post, please update or delete the existed post in user home page!\");\r\n    }\r\n  });\r\n}\r\n/*updataeCarever used to let user to update post*/\r\nexport function updateCaregiver(caregiver) {\r\n  const { first_name, last_name, gender, introduction, username, age, address, salary, working_experience, contact_information } = caregiver;\r\n  if (!username) {\r\n    alert(\"must include a username\");\r\n    return;\r\n  }\r\n  if (!first_name || !last_name) {\r\n    alert(\"must include a first name or last name to update\");\r\n    return;\r\n  }\r\n  if (!gender){\r\n    alert(\"must include gender\");\r\n    return;\r\n  }\r\n  if (!introduction){\r\n    alert(\"must include an introduction\");\r\n    return;\r\n  }\r\n  if (!age){\r\n    alert(\"must include an age\");\r\n    return;\r\n  }\r\n  if (!address){\r\n    alert(\"must include an address\");\r\n    return;\r\n  }\r\n  if (!salary){\r\n    alert(\"must include a salary\");\r\n    return;\r\n  }\r\n  if (!working_experience){\r\n    alert(\"must include a working experience\");\r\n    return;\r\n  }\r\n  if (!contact_information){\r\n    alert(\"must include a contact information\");\r\n    return;\r\n  }\r\n\r\n  const endpoint = BASE_URL + `/findCaregiver/${username}`;\r\n  console.log(contact_information.value);\r\n  // return fetch query to update an author\r\n  return fetch(endpoint, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      first_name,\r\n      last_name,\r\n      gender,\r\n      introduction,\r\n      username,\r\n      age,\r\n      address,\r\n      salary,\r\n      working_experience,\r\n      contact_information\r\n    })\r\n  });\r\n\r\n}\r\n\r\n//use username to delete a post\r\nexport function deleteCaregiver(username) {\r\n  const endpoint = BASE_URL + `/findCaregiver/${username}`;\r\n  return fetch(endpoint, {\r\n    method: \"DELETE\",\r\n  }).then(res =>{\r\n      window.location.href = `user-management/${username}`;\r\n  });\r\n}\r\n\r\nexport function useCaregivers() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [caregivers, setCaregivers] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getCaregivers()\r\n        .then(caregivers => {\r\n          setCaregivers(caregivers);\r\n          setLoading(false);\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n          setError(e);\r\n          setLoading(false);\r\n        });\r\n  }, []);\r\n\r\n  return {\r\n    loading,\r\n    caregivers,\r\n    error\r\n  };\r\n}\r\n\r\n//get all caregivers\r\nfunction getPatients() {\r\n  const endpoint = BASE_URL + `/findPatient`;\r\n\r\n  // TODO\r\n  // return fetch call that gets caregivers list\r\n  return fetch(endpoint).then(res => {\r\n    console.log(res);\r\n    return res.json();\r\n  });\r\n}\r\n\r\nexport function usePatients() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [patients, setPatients] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getPatients()\r\n        .then(patients => {\r\n          setPatients(patients);\r\n          setLoading(false);\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n          setError(e);\r\n          setLoading(false);\r\n        });\r\n  }, []);\r\n\r\n  return {\r\n    loading,\r\n    patients,\r\n    error\r\n  };\r\n}\r\n\r\nexport function acceptReq(user) {\r\n  const { username, name, state} = user;\r\n  const endpoint = BASE_URL + `/user/${username}`;\r\n// return fetch query\r\n  console.log(name);\r\n  console.log(state);\r\n  var action = [state, name];\r\n  console.log(action);\r\n  console.log(JSON.stringify([state, name]));\r\n  return fetch(endpoint, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      action\r\n    })\r\n  }).then(res =>{\r\n    window.location.assign(`http://localhost:3000/toList/${window.sessionStorage.getItem(\"username\")}`)\r\n\r\n  });\r\n}\r\n\r\nexport function acceptReqPatient(user) {\r\n  const { username, name, state} = user;\r\n  const endpoint = BASE_URL + `/user/${username}`;\r\n// return fetch query\r\n  console.log(name);\r\n  console.log(state);\r\n  var action = [state, name];\r\n  console.log(action);\r\n  console.log(JSON.stringify([state, name]));\r\n  return fetch(endpoint, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      action\r\n    })\r\n  });\r\n}\r\n\r\nexport function declineReq(user) {\r\n  const { username, name, state} = user;\r\n  const endpoint = BASE_URL + `/user/${username}`;\r\n// return fetch query\r\n  console.log(name);\r\n  console.log(state);\r\n  var action = [state, name];\r\n  console.log(action);\r\n  console.log(JSON.stringify([state, name]));\r\n  return fetch(endpoint, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      action\r\n    })\r\n  }).then(res =>{\r\n    window.location.assign(`http://localhost:3000/toList/${window.sessionStorage.getItem(\"username\")}`)\r\n  });\r\n}\r\n\r\nexport function declineReqPatient(user) {\r\n  const { username, name, state} = user;\r\n  const endpoint = BASE_URL + `/user/${username}`;\r\n// return fetch query\r\n  console.log(name);\r\n  console.log(state);\r\n  var action = [state, name];\r\n  console.log(action);\r\n  console.log(JSON.stringify([state, name]));\r\n  return fetch(endpoint, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      action\r\n    })\r\n  });\r\n}\r\nexport function sendRequest(user) {\r\n  const { username, name, state} = user;\r\n  const endpoint = BASE_URL + `/user/${username}`;\r\n// return fetch query\r\n  //console.log(\"here!!!!!!!!!!!!\");\r\n  console.log(name);\r\n  console.log(state);\r\n  var action = [state, name];\r\n  console.log(action);\r\n  console.log(JSON.stringify([state, name]));\r\n  return fetch(endpoint, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      action\r\n    })\r\n  });\r\n}\r\n\r\nexport function sentRequestPatient(user) {\r\n  const { username, name, state} = user;\r\n  const endpoint = BASE_URL + `/user/${username}`;\r\n// return fetch query\r\n  console.log(name);\r\n  console.log(state);\r\n  var action = [state, name];\r\n  console.log(action);\r\n  console.log(JSON.stringify([state, name]));\r\n  return fetch(endpoint, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      action\r\n    })\r\n  }).then(res =>{\r\n    //window.location.assign(`http://localhost:3000/toList/${window.sessionStorage.getItem(\"username\")}`)\r\n  });\r\n}\r\n\r\nexport function addPatient(patient) {\r\n  const { first_name, last_name, gender, introduction, username, age, address, contact_information } = patient;\r\n  if ( !gender|| !first_name || !last_name || !introduction || !username || !age || !address || !contact_information) {\r\n    alert(\"must include all fields\");\r\n    return;\r\n  }\r\n\r\n  const endpoint = BASE_URL + `/findPatient/`;\r\n  return fetch(endpoint, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      first_name,\r\n      last_name,\r\n      gender,\r\n      introduction,\r\n      username,\r\n      age,\r\n      address,\r\n      contact_information,\r\n    })\r\n  }).then(res =>{\r\n    if(res.ok){\r\n      window.location.href = `user-management/${username}`;\r\n    }\r\n    else{\r\n      alert(\"You already have a post, please update or delete the existed post in user home page!\");\r\n    }\r\n  });\r\n}\r\n\r\nexport function updatePatient(patient) {\r\n  const { first_name, last_name, gender, introduction, username, age, address, contact_information } = patient;\r\n  if (!username) {\r\n    alert(\"must include a username\");\r\n    return;\r\n  }\r\n  if (!first_name || !last_name) {\r\n    alert(\"must include a first name or last name to update\");\r\n    return;\r\n  }\r\n  if (!gender){\r\n    alert(\"must include gender\");\r\n    return;\r\n  }\r\n  if (!introduction){\r\n    alert(\"must include an introduction\");\r\n    return;\r\n  }\r\n  if (!age){\r\n    alert(\"must include an age\");\r\n    return;\r\n  }\r\n  if (!address){\r\n    alert(\"must include an address\");\r\n    return;\r\n  }\r\n  if (!contact_information){\r\n    alert(\"must include a contact information\");\r\n    return;\r\n  }\r\n  const endpoint = BASE_URL + `/findPatient/${username}`;\r\n  console.log(contact_information.value);\r\n  // return fetch query to update an author\r\n  return fetch(endpoint, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      first_name,\r\n      last_name,\r\n      gender,\r\n      introduction,\r\n      username,\r\n      age,\r\n      address,\r\n      contact_information\r\n    })\r\n  });\r\n}\r\n\r\nexport function deletePatient(username) {\r\n  const endpoint = BASE_URL + `/findPatient/${username}`;\r\n  return fetch(endpoint, {\r\n    method: \"DELETE\",\r\n  }).then(res =>{\r\n    window.location.href = `user-management/${username}`;\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}