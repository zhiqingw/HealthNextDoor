{"ast":null,"code":"import _slicedToArray from \"/Users/xuexuxu/Desktop/mylibraryapp _front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from \"react\"; // TODO - update this to be your url\n\nvar BASE_URL = \"https://mylibraryapp956895.herokuapp.com\";\n\nfunction getAuthors() {\n  var endpoint = BASE_URL + \"/author-management\"; // TODO\n  // return fetch call that gets author list\n\n  return fetch(endpoint).then(function (res) {\n    console.log(res);\n    return res.json();\n  });\n}\n\nexport function getAuthor(id) {\n  var endpoint = BASE_URL + \"/author-management/\".concat(id); // TODO\n  // return fetch statement to get an author by the id\n}\nexport function addAuthor(author) {\n  var id = author.id,\n      first_name = author.first_name,\n      last_name = author.last_name;\n\n  if (!id || !first_name || !last_name) {\n    alert(\"must include all fields\");\n    return;\n  }\n\n  var endpoint = BASE_URL + \"/author-management/\"; // TODO\n  // return fetch statement to add an author\n}\nexport function updateAuthor(authorId, author) {\n  var id = author.id,\n      first_name = author.first_name,\n      last_name = author.last_name;\n\n  if (!id) {\n    alert(\"must include an id\");\n    return;\n  }\n\n  if (!first_name || !last_name) {\n    alert(\"must include a first name or last name to update\");\n    return;\n  }\n\n  var endpoint = BASE_URL + \"/author-management/\".concat(id); // return fetch query to update an author\n\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id,\n      first_name,\n      last_name\n    })\n  }).then(function (res) {\n    return location.reload();\n  });\n}\nexport function deleteAuthor(id) {\n  var endpoint = BASE_URL + \"/author-management/\".concat(id); // return fetch query\n}\nexport function useAuthors() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      authors = _useState4[0],\n      setAuthors = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  useEffect(function () {\n    getAuthors().then(function (authors) {\n      setAuthors(authors);\n      setLoading(false);\n    }).catch(function (e) {\n      console.log(e);\n      setError(e);\n      setLoading(false);\n    });\n  }, []);\n  return {\n    loading,\n    authors,\n    error\n  };\n}","map":{"version":3,"sources":["/Users/xuexuxu/Desktop/mylibraryapp _front/src/api.js"],"names":["useState","useEffect","BASE_URL","getAuthors","endpoint","fetch","then","res","console","log","json","getAuthor","id","addAuthor","author","first_name","last_name","alert","updateAuthor","authorId","method","headers","body","JSON","stringify","location","reload","deleteAuthor","useAuthors","loading","setLoading","authors","setAuthors","error","setError","catch","e"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\n\n// TODO - update this to be your url\nconst BASE_URL = \"https://mylibraryapp956895.herokuapp.com\";\n\nfunction getAuthors() {\n  const endpoint = BASE_URL + `/author-management`;\n\n  // TODO\n  // return fetch call that gets author list\n  return fetch(endpoint).then(res => {\n    console.log(res);\n    return res.json();\n  });\n}\n\nexport function getAuthor(id) {\n  const endpoint = BASE_URL + `/author-management/${id}`;\n\n  // TODO\n  // return fetch statement to get an author by the id\n}\n\nexport function addAuthor(author) {\n  const { id, first_name, last_name } = author;\n  if (!id || !first_name || !last_name) {\n    alert(\"must include all fields\");\n    return;\n  }\n\n  const endpoint = BASE_URL + `/author-management/`;\n\n  // TODO\n  // return fetch statement to add an author\n}\n\nexport function updateAuthor(authorId,author) {\n  const { id, first_name, last_name } = author;\n  if (!id) {\n    alert(\"must include an id\");\n    return;\n  }\n  if (!first_name || !last_name) {\n    alert(\"must include a first name or last name to update\");\n    return;\n  }\n\n  const endpoint = BASE_URL + `/author-management/${id}`;\n\n  // return fetch query to update an author\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id,\n      first_name,\n      last_name\n    })\n  }).then(res => location.reload());\n\n}\n\nexport function deleteAuthor(id) {\n  const endpoint = BASE_URL + `/author-management/${id}`;\n\n  // return fetch query\n}\n\nexport function useAuthors() {\n  const [loading, setLoading] = useState(true);\n  const [authors, setAuthors] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getAuthors()\n      .then(authors => {\n        setAuthors(authors);\n        setLoading(false);\n      })\n      .catch(e => {\n        console.log(e);\n        setError(e);\n        setLoading(false);\n      });\n  }, []);\n\n  return {\n    loading,\n    authors,\n    error\n  };\n}\n"]},"metadata":{},"sourceType":"module"}