{"ast":null,"code":"import _slicedToArray from \"/Users/xuexuxu/Desktop/info30005_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from \"react\"; // TODO - update this to be your url\n\nvar BASE_URL = \"https://healthnextdoortest.herokuapp.com\";\nexport function loginCheck(username, password) {\n  if (!username) {\n    alert(\"must include a username\");\n    return;\n  }\n\n  if (!password) {\n    alert(\"must include password\");\n    return;\n  }\n\n  var endpoint = BASE_URL + \"/login\"; // return fetch query to update an author\n\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  }).then(function (res) {\n    if (res.ok) {\n      /**let history = this.props.history;\n       history.push('/${username}');**/\n      //<User {...username}/>\n      window.sessionStorage.setItem(\"username\", username);\n      window.location.href = \"user-management/\".concat(username); //let handleGoToDetail;\n    } else {\n      alert(\"wrong password or username\");\n    }\n  });\n}\nexport function signupCheck(username, password, confirmed_password) {\n  if (username.value === \"\") {\n    alert(\"please input a username!\");\n  } else if (password.value === \"\") {\n    alert(\"please input a password!\");\n  } else if (confirmed_password.value === \"\") {\n    alert(\"please confirm your password!\"); //window.location.href=\"welcome.html\";\n  } else if (password.value !== confirmed_password.value) {\n    alert(\"password and confirmed password does not match\");\n  }\n\n  var endpoint = BASE_URL + \"/signup\"; // return fetch query to update an author\n\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  }).then(function (res) {\n    if (res.ok) {\n      /**let history = this.props.history;\n       history.push('/${username}');**/\n      //<User {...username}/>\n      window.sessionStorage.setItem(\"username\", username);\n      window.location.href = \"user-management/\".concat(username); //let handleGoToDetail;\n    }\n  });\n}\nexport function updateUser(user) {\n  var username = user.username,\n      password = user.password;\n\n  if (!password) {\n    alert(\"must include a password\");\n    return;\n  }\n\n  var endpoint = BASE_URL + \"/login/\".concat(username); // return fetch query\n\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  }); //.then(res => location.reload());\n}\nexport function getUser() {\n  var endpoint = BASE_URL + \"/login\";\n  return fetch(endpoint).then(function (res) {\n    console.log(res);\n    return res.json();\n  }); // TODO\n  // return fetch statement to get an author by the id\n}\nexport function useUser() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  useEffect(function () {\n    getUser().then(function (user) {\n      setUser(user);\n      setLoading(false);\n    }).catch(function (e) {\n      console.log(e);\n      setError(e);\n      setLoading(false);\n    });\n  }, []);\n  return {\n    loading,\n    user,\n    error\n  };\n}\n\nfunction getCaregivers() {\n  var endpoint = BASE_URL + \"/findCaregiver\"; // TODO\n  // return fetch call that gets author list\n\n  return fetch(endpoint).then(function (res) {\n    console.log(res);\n    return res.json();\n  });\n}\n\nexport function getCaregiver(id) {\n  var endpoint = BASE_URL + \"/findCaregiver/\".concat(id); // TODO\n  // return fetch statement to get an author by the id\n}\nexport function addCaregiver(caregiver) {\n  var first_name = caregiver.first_name,\n      last_name = caregiver.last_name,\n      gender = caregiver.gender,\n      introduction = caregiver.introduction,\n      username = caregiver.username;\n\n  if (!gender || !first_name || !last_name || !introduction || !username) {\n    alert(\"must include all fields\");\n    return;\n  }\n\n  var endpoint = BASE_URL + \"/findCaregiver/\";\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      first_name,\n      last_name,\n      gender,\n      introduction,\n      username\n    })\n  }); // TODO\n  // return fetch statement to add an author\n}\nexport function updateCaregiver(caregiver) {\n  var first_name = caregiver.first_name,\n      last_name = caregiver.last_name,\n      gender = caregiver.gender,\n      introduction = caregiver.introduction,\n      username = caregiver.username;\n\n  if (!username) {\n    alert(\"must include a username\");\n    return;\n  }\n\n  if (!first_name || !last_name) {\n    alert(\"must include a first name or last name to update\");\n    return;\n  }\n\n  if (!gender) {\n    alert(\"must include gender\");\n    return;\n  }\n\n  if (!introduction) {\n    alert(\"must include an introduction\");\n    return;\n  }\n\n  var endpoint = BASE_URL + \"/findCaregiver/\".concat(username); // return fetch query to update an author\n\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      first_name,\n      last_name,\n      gender,\n      introduction,\n      username\n    })\n  });\n}\nexport function deleteCaregiver(username) {\n  var endpoint = BASE_URL + \"/findCaregiver/\".concat(username);\n  return fetch(endpoint, {\n    method: \"DELETE\"\n  }); // return fetch query\n}\nexport function useCaregivers() {\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      caregivers = _useState10[0],\n      setCaregivers = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      error = _useState12[0],\n      setError = _useState12[1];\n\n  useEffect(function () {\n    getCaregivers().then(function (caregivers) {\n      setCaregivers(caregivers);\n      setLoading(false);\n    }).catch(function (e) {\n      console.log(e);\n      setError(e);\n      setLoading(false);\n    });\n  }, []);\n  return {\n    loading,\n    caregivers,\n    error\n  };\n}","map":{"version":3,"sources":["/Users/xuexuxu/Desktop/info30005_front/src/api.js"],"names":["useState","useEffect","BASE_URL","loginCheck","username","password","alert","endpoint","fetch","method","headers","body","JSON","stringify","then","res","ok","window","sessionStorage","setItem","location","href","signupCheck","confirmed_password","value","updateUser","user","getUser","console","log","json","useUser","loading","setLoading","setUser","error","setError","catch","e","getCaregivers","getCaregiver","id","addCaregiver","caregiver","first_name","last_name","gender","introduction","updateCaregiver","deleteCaregiver","useCaregivers","caregivers","setCaregivers"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\n\n// TODO - update this to be your url\nconst BASE_URL = \"https://healthnextdoortest.herokuapp.com\";\n\nexport function loginCheck(username, password) {\n\n  if (!username) {\n    alert(\"must include a username\");\n    return;\n  }\n  if (!password) {\n    alert(\"must include password\");\n    return;\n  }\n\n  const endpoint = BASE_URL + `/login`;\n  // return fetch query to update an author\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  }).then(res =>{\n    if(res.ok){\n      /**let history = this.props.history;\n       history.push('/${username}');**/\n      //<User {...username}/>\n      window.sessionStorage.setItem(\"username\",username);\n      window.location.href = `user-management/${username}`;\n      //let handleGoToDetail;\n    }\n    else{\n      alert(\"wrong password or username\");\n    }\n  });\n\n}\nexport function signupCheck(username, password, confirmed_password) {\n\n\n  if (username.value === \"\") {\n    alert(\"please input a username!\");\n  } else if (password.value === \"\") {\n    alert(\"please input a password!\");\n  } else if (confirmed_password.value === \"\") {\n    alert(\"please confirm your password!\");\n    //window.location.href=\"welcome.html\";\n  } else if (password.value !== confirmed_password.value) {\n    alert(\"password and confirmed password does not match\");\n  }\n\n  const endpoint = BASE_URL + `/signup`;\n  // return fetch query to update an author\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  }).then(res =>{\n    if(res.ok){\n      /**let history = this.props.history;\n       history.push('/${username}');**/\n      //<User {...username}/>\n      window.sessionStorage.setItem(\"username\",username);\n      window.location.href = `user-management/${username}`;\n      //let handleGoToDetail;\n    }\n  });\n\n}\n\nexport function updateUser(user) {\n  const { username, password} = user;\n  if (!password) {\n    alert(\"must include a password\");\n    return;\n  }\n  const endpoint = BASE_URL + `/login/${username}`;\n// return fetch query\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n  //.then(res => location.reload());\n}\n\n\nexport function getUser() {\n  const endpoint = BASE_URL + `/login`;\n  return fetch(endpoint).then(res => {\n    console.log(res);\n    return res.json();\n  });\n  // TODO\n  // return fetch statement to get an author by the id\n\n}\n\nexport function useUser() {\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getUser()\n        .then(user => {\n          setUser(user);\n          setLoading(false);\n        })\n        .catch(e => {\n          console.log(e);\n          setError(e);\n          setLoading(false);\n        });\n  }, []);\n\n  return {\n    loading,\n    user,\n    error\n  };\n}\nfunction getCaregivers() {\n  const endpoint = BASE_URL + `/findCaregiver`;\n\n  // TODO\n  // return fetch call that gets author list\n  return fetch(endpoint).then(res => {\n    console.log(res);\n    return res.json();\n  });\n}\n\nexport function getCaregiver(id) {\n  const endpoint = BASE_URL + `/findCaregiver/${id}`;\n\n  // TODO\n  // return fetch statement to get an author by the id\n}\n\nexport function addCaregiver(caregiver) {\n  const { first_name, last_name, gender, introduction, username } = caregiver;\n  if ( !gender|| !first_name || !last_name || !introduction || !username) {\n    alert(\"must include all fields\");\n    return;\n  }\n\n  const endpoint = BASE_URL + `/findCaregiver/`;\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      first_name,\n      last_name,\n      gender,\n      introduction,\n      username\n    })\n  });\n  // TODO\n  // return fetch statement to add an author\n}\n\nexport function updateCaregiver(caregiver) {\n  const { first_name, last_name, gender, introduction, username } = caregiver;\n  if (!username) {\n    alert(\"must include a username\");\n    return;\n  }\n  if (!first_name || !last_name) {\n    alert(\"must include a first name or last name to update\");\n    return;\n  }\n  if (!gender){\n    alert(\"must include gender\");\n    return;\n  }\n  if (!introduction){\n    alert(\"must include an introduction\");\n    return;\n  }\n\n  const endpoint = BASE_URL + `/findCaregiver/${username}`;\n\n  // return fetch query to update an author\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      first_name,\n      last_name,\n      gender,\n      introduction,\n      username\n    })\n  });\n\n}\n\nexport function deleteCaregiver(username) {\n  const endpoint = BASE_URL + `/findCaregiver/${username}`;\n  return fetch(endpoint, {\n    method: \"DELETE\",\n  });\n  // return fetch query\n}\n\nexport function useCaregivers() {\n  const [loading, setLoading] = useState(true);\n  const [caregivers, setCaregivers] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getCaregivers()\n        .then(caregivers => {\n          setCaregivers(caregivers);\n          setLoading(false);\n        })\n        .catch(e => {\n          console.log(e);\n          setError(e);\n          setLoading(false);\n        });\n  }, []);\n\n  return {\n    loading,\n    caregivers,\n    error\n  };\n}\n\n"]},"metadata":{},"sourceType":"module"}